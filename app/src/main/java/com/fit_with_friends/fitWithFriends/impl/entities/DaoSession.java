package com.fit_with_friends.fitWithFriends.impl.entities;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.fit_with_friends.fitWithFriends.impl.entities.User;
import com.fit_with_friends.fitWithFriends.impl.entities.Challenge;
import com.fit_with_friends.fitWithFriends.impl.entities.Notification;
import com.fit_with_friends.fitWithFriends.impl.entities.Motivation;
import com.fit_with_friends.fitWithFriends.impl.entities.Connection;
import com.fit_with_friends.fitWithFriends.impl.entities.WeightLog;

import com.fit_with_friends.fitWithFriends.impl.entities.UserDao;
import com.fit_with_friends.fitWithFriends.impl.entities.ChallengeDao;
import com.fit_with_friends.fitWithFriends.impl.entities.NotificationDao;
import com.fit_with_friends.fitWithFriends.impl.entities.MotivationDao;
import com.fit_with_friends.fitWithFriends.impl.entities.ConnectionDao;
import com.fit_with_friends.fitWithFriends.impl.entities.WeightLogDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig challengeDaoConfig;
    private final DaoConfig notificationDaoConfig;
    private final DaoConfig motivationDaoConfig;
    private final DaoConfig connectionDaoConfig;
    private final DaoConfig weightLogDaoConfig;

    private final UserDao userDao;
    private final ChallengeDao challengeDao;
    private final NotificationDao notificationDao;
    private final MotivationDao motivationDao;
    private final ConnectionDao connectionDao;
    private final WeightLogDao weightLogDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        challengeDaoConfig = daoConfigMap.get(ChallengeDao.class).clone();
        challengeDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        motivationDaoConfig = daoConfigMap.get(MotivationDao.class).clone();
        motivationDaoConfig.initIdentityScope(type);

        connectionDaoConfig = daoConfigMap.get(ConnectionDao.class).clone();
        connectionDaoConfig.initIdentityScope(type);

        weightLogDaoConfig = daoConfigMap.get(WeightLogDao.class).clone();
        weightLogDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        challengeDao = new ChallengeDao(challengeDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);
        motivationDao = new MotivationDao(motivationDaoConfig, this);
        connectionDao = new ConnectionDao(connectionDaoConfig, this);
        weightLogDao = new WeightLogDao(weightLogDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Challenge.class, challengeDao);
        registerDao(Notification.class, notificationDao);
        registerDao(Motivation.class, motivationDao);
        registerDao(Connection.class, connectionDao);
        registerDao(WeightLog.class, weightLogDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        challengeDaoConfig.getIdentityScope().clear();
        notificationDaoConfig.getIdentityScope().clear();
        motivationDaoConfig.getIdentityScope().clear();
        connectionDaoConfig.getIdentityScope().clear();
        weightLogDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ChallengeDao getChallengeDao() {
        return challengeDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

    public MotivationDao getMotivationDao() {
        return motivationDao;
    }

    public ConnectionDao getConnectionDao() {
        return connectionDao;
    }

    public WeightLogDao getWeightLogDao() {
        return weightLogDao;
    }

}
